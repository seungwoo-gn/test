{"code":"import { __makeTemplateObject } from \"tslib\";\nimport React, { useCallback, useEffect, useRef, useState, } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Typography } from \"../../Foundation/Typography\";\nimport { Spacing } from \"../../Foundation/Spacing\";\nimport { Icon } from \"../../Foundation/Icon\";\nimport { Button } from \"../../Actions/Button\";\nimport { ProgressBar } from \"../../Foundation/ProgressBar\";\nvar ImageUploader = function (_a) {\n    var _b = _a.width, width = _b === void 0 ? 416 : _b, _c = _a.height, height = _c === void 0 ? 200 : _c, _d = _a.handleUpload, handleUpload = _d === void 0 ? function () { } : _d, body = _a.body, selectedImage = _a.selectedImage, setSelectedImage = _a.setSelectedImage, _e = _a.handleCancel, handleCancel = _e === void 0 ? function () { } : _e, isProgress = _a.isProgress, _f = _a.progressPercent, progressPercent = _f === void 0 ? 0 : _f;\n    var inputRef = useRef(null);\n    var _g = useState(null), previewImage = _g[0], setPreviewImage = _g[1];\n    var handleImageChange = useCallback(function (e) {\n        var _a;\n        e.preventDefault();\n        var file = (_a = e.target.files) === null || _a === void 0 ? void 0 : _a[0];\n        if (file) {\n            setPreviewImage(URL.createObjectURL(file));\n            setSelectedImage(file);\n        }\n    }, [selectedImage, previewImage]);\n    var handleDrop = function (e) {\n        e.preventDefault();\n        var file = e.dataTransfer.files[0];\n        if (file) {\n            setPreviewImage(URL.createObjectURL(file));\n            setSelectedImage(file);\n        }\n    };\n    var handleDragOver = useCallback(function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n    }, []);\n    var handleImageUploaderClick = function () {\n        if (inputRef.current) {\n            inputRef.current.click();\n        }\n    };\n    useEffect(function () {\n        if (!selectedImage) {\n            setPreviewImage(null);\n            if (inputRef.current)\n                inputRef.current.value = \"\";\n        }\n        if (selectedImage)\n            handleUpload();\n    }, [selectedImage]);\n    return (React.createElement(React.Fragment, null,\n        body && (React.createElement(\"div\", { onDrop: handleDrop, onClick: handleImageUploaderClick, onDragOver: handleDragOver }, body)),\n        !body && (React.createElement(DefaultUploadBox, { width: width, height: height, onDrop: handleDrop, onDragOver: handleDragOver },\n            previewImage ? (React.createElement(CustomImage, { width: width - width / 1.77, height: height - height / 2.6, src: previewImage, alt: \"Uploaded\" })) : (React.createElement(ImageWrapper, { isSelected: !!selectedImage },\n                React.createElement(Icon, { name: \"Cloud\", width: 36, height: 36, fill: \"#E0E0E0\" }),\n                React.createElement(Spacing, { gap: 14, column: true, align: \"center\" },\n                    React.createElement(Typography, { whiteSpace: \"pre-line\", color: \"#9e9e9e\", size: 14, weight: 400, height: 21, align: \"center\" }, \"여기로 이미지를 드래그하거나\\n파일을 업로드 하세요.\"),\n                    React.createElement(Button, { onClick: handleImageUploaderClick, custom: {\n                            background: \"#616161\",\n                            padding: \"10px 34px\",\n                            borderRadius: 100,\n                            width: true,\n                            fontColor: \"#fff\",\n                            fontSize: \"14px\",\n                            fontWeight: 400,\n                        } }, \"\\uC5C5\\uB85C\\uB4DC\")))),\n            isProgress && (React.createElement(ProgressBarBox, null,\n                React.createElement(ProgressBar, { width: progressPercent, handleOnCancel: handleCancel }))),\n            selectedImage && !isProgress && (React.createElement(ImageNameBox, null,\n                React.createElement(ImageNameWrapper, null,\n                    React.createElement(Typography, { color: \"#616161\", size: 14, weight: 400, height: 21 }, selectedImage ? selectedImage.name : \"\")),\n                React.createElement(StyledCloseIcon, { onClick: handleCancel },\n                    React.createElement(Icon, { name: \"Close\", width: 24, height: 24, fill: \"#9e9e9e\" })))))),\n        React.createElement(\"input\", { ref: inputRef, type: \"file\", accept: \"image/*\", onChange: handleImageChange, style: { display: \"none\" } })));\n};\nvar DefaultUploadBox = styled.div(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  position: relative;\\n  width: \", \"px;\\n  height: \", \"px;\\n  border: 1px solid #e0e0e0e0;\\n  display: flex;\\n  padding: 8px 0;\\n  justify-content: center;\\n  align-items: center;\\n  flex-shrink: 0;\\n\"], [\"\\n  position: relative;\\n  width: \", \"px;\\n  height: \", \"px;\\n  border: 1px solid #e0e0e0e0;\\n  display: flex;\\n  padding: 8px 0;\\n  justify-content: center;\\n  align-items: center;\\n  flex-shrink: 0;\\n\"])), function (props) { return props.width; }, function (props) { return props.height; });\nvar ProgressBarBox = styled.div(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\\n  width: 96%;\\n  position: absolute;\\n  bottom: 0;\\n  padding: 0 8px 8px 8px;\\n\"], [\"\\n  width: 96%;\\n  position: absolute;\\n  bottom: 0;\\n  padding: 0 8px 8px 8px;\\n\"])));\nvar ImageWrapper = styled.div(templateObject_3 || (templateObject_3 = __makeTemplateObject([\"\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  gap: 4px;\\n  position: absolute;\\n  top: \", \"px;\\n\"], [\"\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  gap: 4px;\\n  position: absolute;\\n  top: \", \"px;\\n\"])), function (props) { return (props.isSelected ? 16 : 32); });\nvar CustomImage = styled.img(templateObject_4 || (templateObject_4 = __makeTemplateObject([\"\\n  position: absolute;\\n  top: 16px;\\n\"], [\"\\n  position: absolute;\\n  top: 16px;\\n\"])));\nvar ImageNameBox = styled.div(templateObject_5 || (templateObject_5 = __makeTemplateObject([\"\\n  display: flex;\\n  align-items: center;\\n  position: absolute;\\n  width: 96%;\\n  height: 36px;\\n  bottom: 8px;\\n  border: 1px solid #f5f5f5;\\n  background: #fff;\\n\"], [\"\\n  display: flex;\\n  align-items: center;\\n  position: absolute;\\n  width: 96%;\\n  height: 36px;\\n  bottom: 8px;\\n  border: 1px solid #f5f5f5;\\n  background: #fff;\\n\"])));\nvar ImageNameWrapper = styled.div(templateObject_6 || (templateObject_6 = __makeTemplateObject([\"\\n  width: 100%;\\n  height: 36px;\\n  border: 1px solid #f5f5f5;\\n  background-color: #f5f5f5;\\n  display: flex;\\n  align-items: center;\\n  padding: 0 0 0 8px;\\n\"], [\"\\n  width: 100%;\\n  height: 36px;\\n  border: 1px solid #f5f5f5;\\n  background-color: #f5f5f5;\\n  display: flex;\\n  align-items: center;\\n  padding: 0 0 0 8px;\\n\"])));\nvar StyledCloseIcon = styled.div(templateObject_7 || (templateObject_7 = __makeTemplateObject([\"\\n  cursor: pointer;\\n  position: absolute;\\n  right: 5px;\\n\"], [\"\\n  cursor: pointer;\\n  position: absolute;\\n  right: 5px;\\n\"])));\nexport { ImageUploader };\nvar templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7;\n","references":["/Users/oh-seung-woo/Desktop/genesisnest/gn-react-ui/.yarn/cache/@types-react-npm-18.2.21-c50bc2f785-ffed203bfe.zip/node_modules/@types/react/index.d.ts","/Users/oh-seung-woo/Desktop/genesisnest/gn-react-ui/.yarn/__virtual__/@emotion-styled-virtual-43d4b2acbb/0/cache/@emotion-styled-npm-11.11.0-9a95c8527d-904f641aad.zip/node_modules/@emotion/styled/types/index.d.ts","/Users/oh-seung-woo/Desktop/genesisnest/gn-react-ui/src/components/Forms/ImageUploader/types.ts","/Users/oh-seung-woo/Desktop/genesisnest/gn-react-ui/src/components/Foundation/Typography/index.ts","/Users/oh-seung-woo/Desktop/genesisnest/gn-react-ui/src/components/Foundation/Spacing/index.ts","/Users/oh-seung-woo/Desktop/genesisnest/gn-react-ui/src/components/Foundation/Icon/index.ts","/Users/oh-seung-woo/Desktop/genesisnest/gn-react-ui/src/components/Actions/Button/index.ts","/Users/oh-seung-woo/Desktop/genesisnest/gn-react-ui/src/components/Foundation/ProgressBar/index.ts"],"dts":{"name":"/Users/oh-seung-woo/Desktop/genesisnest/gn-react-ui/dist/components/Forms/ImageUploader/ImageUploader.d.ts","writeByteOrderMark":false,"text":"import React from \"react\";\nimport { ImageUploaderProps } from \"./types\";\ndeclare const ImageUploader: ({ width, height, handleUpload, body, selectedImage, setSelectedImage, handleCancel, isProgress, progressPercent, }: ImageUploaderProps) => React.JSX.Element;\nexport { ImageUploader };\n"}}
