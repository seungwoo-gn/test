{"code":"import { __makeTemplateObject } from \"tslib\";\nimport React, { useState } from \"react\";\nimport { Radio } from \"../Radio\";\nimport { Spacing } from \"../../Foundation/Spacing\";\nimport { DropDown } from \"../DropDown\";\nimport { Typography } from \"../../Foundation/Typography\";\nimport styled from \"@emotion/styled\";\nvar options = [\n    { label: \"AM\", value: \"am\" },\n    { label: \"PM\", value: \"pm\" },\n];\nvar hourList = [\n    {\n        value: \"1\",\n        item: \"01\",\n    },\n    {\n        value: \"2\",\n        item: \"02\",\n    },\n    {\n        value: \"3\",\n        item: \"03\",\n    },\n    {\n        value: \"4\",\n        item: \"04\",\n    },\n    {\n        value: \"5\",\n        item: \"05\",\n    },\n    {\n        value: \"6\",\n        item: \"06\",\n    },\n    {\n        value: \"7\",\n        item: \"07\",\n    },\n    {\n        value: \"8\",\n        item: \"08\",\n    },\n    {\n        value: \"9\",\n        item: \"09\",\n    },\n    {\n        value: \"10\",\n        item: \"10\",\n    },\n    {\n        value: \"11\",\n        item: \"11\",\n    },\n    {\n        value: \"12\",\n        item: \"12\",\n    },\n];\nvar minuteList = [\n    {\n        value: \"0\",\n        item: \"00\",\n    },\n    {\n        value: \"10\",\n        item: \"10\",\n    },\n    {\n        value: \"20\",\n        item: \"20\",\n    },\n    {\n        value: \"30\",\n        item: \"30\",\n    },\n    {\n        value: \"40\",\n        item: \"40\",\n    },\n    {\n        value: \"50\",\n        item: \"50\",\n    },\n];\nvar formatWithHour = function (value) {\n    return value > 12\n        ? \"\".concat(value - 12)\n        : value < 10\n            ? \"0\".concat(value)\n            : value.toString();\n};\nvar formatWithMinute = function (value) {\n    return value < 10 ? \"00\" : \"\".concat(value.toString()[0], \"0\");\n};\nvar TimePicker = function (_a) {\n    var selected = _a.selected, setSelected = _a.setSelected, _b = _a.radioGap, radioGap = _b === void 0 ? 8 : _b, _c = _a.contentGap, contentGap = _c === void 0 ? 25 : _c, _d = _a.valueWidth, valueWidth = _d === void 0 ? 80 : _d, onChangeSelected = _a.onChangeSelected;\n    var _e = useState(selected.getHours() > 12 ? \"pm\" : \"am\"), timeType = _e[0], setTimeType = _e[1];\n    var _f = useState({\n        value: formatWithHour(selected.getHours()),\n        item: \"\".concat(formatWithHour(selected.getHours())),\n    }), hour = _f[0], setHour = _f[1];\n    var _g = useState({\n        value: formatWithMinute(selected.getMinutes()),\n        item: formatWithMinute(selected.getMinutes()),\n    }), minute = _g[0], setMinute = _g[1];\n    var handleChangeTimeType = function (value) {\n        var newSelected = selected;\n        setTimeType(value);\n        if (value === \"am\" && selected.getHours() > 12) {\n            newSelected.setHours(selected.getHours() - 12);\n            onChangeSelected === null || onChangeSelected === void 0 ? void 0 : onChangeSelected(newSelected);\n            setSelected === null || setSelected === void 0 ? void 0 : setSelected(newSelected);\n        }\n        if (value === \"pm\" && selected.getHours() < 12) {\n            newSelected.setHours(selected.getHours() + 12);\n            onChangeSelected === null || onChangeSelected === void 0 ? void 0 : onChangeSelected(newSelected);\n            setSelected === null || setSelected === void 0 ? void 0 : setSelected(newSelected);\n        }\n    };\n    var handleChangeHour = function (value) {\n        var newSelected = selected;\n        newSelected.setHours(timeType === \"am\" ? Number(value) : Number(value) + 12);\n        onChangeSelected === null || onChangeSelected === void 0 ? void 0 : onChangeSelected(newSelected);\n        setSelected === null || setSelected === void 0 ? void 0 : setSelected(newSelected);\n    };\n    var handleChangeMinute = function (value) {\n        var newSelected = selected;\n        newSelected.setMinutes(Number(formatWithMinute(Number(value))));\n        onChangeSelected === null || onChangeSelected === void 0 ? void 0 : onChangeSelected(newSelected);\n        setSelected === null || setSelected === void 0 ? void 0 : setSelected(newSelected);\n    };\n    return (React.createElement(TimePickerBox, { gap: contentGap },\n        React.createElement(Radio, { gap: radioGap, width: 20, height: 20, list: options, onChange: handleChangeTimeType, value: timeType }),\n        React.createElement(Spacing, { gap: 8, align: \"center\" },\n            React.createElement(DropDown, { width: valueWidth, height: 20, main: hour, setMain: setHour, list: hourList, onChange: handleChangeHour }),\n            React.createElement(Typography, { color: \"#000\", size: 20, weight: 700, height: 30 }, \":\"),\n            React.createElement(DropDown, { width: valueWidth, height: 20, main: minute, setMain: setMinute, list: minuteList, onChange: handleChangeMinute }))));\n};\nvar TimePickerBox = styled.div(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  display: flex;\\n  gap: \", \"px;\\n\"], [\"\\n  display: flex;\\n  gap: \", \"px;\\n\"])), function (props) { return props.gap; });\nexport { TimePicker };\nvar templateObject_1;\n","references":["/Users/oh-seung-woo/Desktop/genesisnest/gn-react-ui/.yarn/cache/@types-react-npm-18.2.28-8e8cf3938c-81381bedeb.zip/node_modules/@types/react/index.d.ts","/Users/oh-seung-woo/Desktop/genesisnest/gn-react-ui/src/components/Forms/TimePicker/types.ts","/Users/oh-seung-woo/Desktop/genesisnest/gn-react-ui/src/components/Forms/Radio/index.ts","/Users/oh-seung-woo/Desktop/genesisnest/gn-react-ui/src/types/common.ts","/Users/oh-seung-woo/Desktop/genesisnest/gn-react-ui/src/components/Foundation/Spacing/index.ts","/Users/oh-seung-woo/Desktop/genesisnest/gn-react-ui/src/components/Forms/DropDown/index.ts","/Users/oh-seung-woo/Desktop/genesisnest/gn-react-ui/src/components/Forms/DropDown/types.ts","/Users/oh-seung-woo/Desktop/genesisnest/gn-react-ui/src/components/Foundation/Typography/index.ts","/Users/oh-seung-woo/Desktop/genesisnest/gn-react-ui/.yarn/__virtual__/@emotion-styled-virtual-43d4b2acbb/0/cache/@emotion-styled-npm-11.11.0-9a95c8527d-904f641aad.zip/node_modules/@emotion/styled/types/index.d.ts"],"dts":{"name":"/Users/oh-seung-woo/Desktop/genesisnest/gn-react-ui/dist/components/Forms/TimePicker/TimePicker.d.ts","writeByteOrderMark":false,"text":"import React from \"react\";\nimport { TimePickerProps } from \"./types\";\ndeclare const TimePicker: ({ selected, setSelected, radioGap, contentGap, valueWidth, onChangeSelected, }: TimePickerProps) => React.JSX.Element;\nexport { TimePicker };\n"}}
